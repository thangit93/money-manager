version: '3.6'
services:
  nginx:
    build:
      dockerfile: ./docker/nginx/Dockerfile
      context: .
    ports:
      - ${NGINX_HOST_PORT}:80
    networks:
      - money-manager-network

  api:
    build:
      dockerfile: ./docker/api/Dockerfile
      context: .
      args:
        DOCKER_UID: ${DOCKER_UID:-0}
        DOCKER_GID: ${DOCKER_GID:-0}
    tty: true
    stdin_open: true
    command: sh /docker-entrypoint.sh
    environment:
      HOST: 0.0.0.0
      ENVIROMENT: ${ENVIROMENT:-DEV}
    volumes: 
      - ./api/.:/app
    networks:
      - money-manager-network
      - money-manager-db-network

  mongodb:
    image: mongo:6.0.3-focal
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-money_manager}
    ports:
      - ${MONGODB_PORT:-27017}:27017
    volumes:
      - mongodb-vol:/data/db
      - ./docker/mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - money-manager-db-network

  client:
    build:
      dockerfile: ./docker/client/Dockerfile
      context: .
      args:
        DOCKER_UID: ${DOCKER_UID:-0}
        DOCKER_GID: ${DOCKER_GID:-0}
    tty: true
    stdin_open: true
    command: sh /docker-entrypoint.sh
    environment:
      HOST: 0.0.0.0
      ENVIROMENT: ${ENVIROMENT:-DEV}
    volumes: 
      - ./client/.:/app
    networks:
      - money-manager-network

  redis:
    image: redis:7.0.7-alpine
    restart: always
    volumes:
      - redis-vol:/data
    ports:
      - ${REDIS_HOST_PORT}:6379
    networks:
      - money-manager-db-network


networks:
  money-manager-network:
    driver: bridge
  money-manager-db-network:
    driver: bridge

volumes:
  mongodb-vol:
    driver: local
  redis-vol:
    driver: local
